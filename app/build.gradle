plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'

}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.aba.stackexchange"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "BASE_URL", '"https://api.stackexchange.com/2.3/"'
            buildConfigField "String", "API_KEY", '"XOgAHZgCd6cPjZkUsLyGG73IFtKG4RWO"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "String", "BASE_URL", '"https://api.stackexchange.com/2.3/"'
            buildConfigField "String", "API_KEY", '"XOgAHZgCd6cPjZkUsLyGG73IFtKG4RWO"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlinVersion}"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    /** Navigation */
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.navigation}"


    /** live data test */
    testImplementation "androidx.arch.core:core-testing:${versions.life_cycle_version}"

    /** Mockito testing */
    testImplementation "org.mockito:mockito-core:${versions.mockito_core}"
    testImplementation "org.mockito:mockito-inline:${versions.mockito_inline}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockito_kotlin}"

    /** Presentation */
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${versions.swipeRefresh}"


    /** Extensions */
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.archLifecycleExtensions}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.archLifecycleExtensions}"

    /** Coroutine */
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"


    /** Dagger 2 */
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"


    /** Room */
    implementation "androidx.room:room-runtime:${versions.room}"
    kapt "androidx.room:room-compiler:${versions.room}"
    implementation "androidx.room:room-ktx:${versions.room}"
    implementation "androidx.room:room-rxjava2:${versions.room}"
    implementation "androidx.room:room-common:${versions.room}"


    /** OKHttp */
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"

    /** Retrofit */
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"


    /** gson */
    implementation "com.google.code.gson:gson:${versions.gson}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.converter_gson}"

    /** Image Loading */
    implementation "com.github.bumptech.glide:glide:${versions.glide}"


    /** Annotation */
    testImplementation "androidx.annotation:annotation:${versions.androidxAnnotations}"
    androidTestImplementation "androidx.annotation:annotation:${versions.androidxAnnotations}"
}